{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kavar\\\\Downloads\\\\simpleCRUD_EventNexus\\\\simpleCRUD_EventNexus\\\\eventnexus-frontend\\\\src\\\\pages\\\\customer\\\\RegisterEvent.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState, useMemo } from 'react';\nimport { Container, Form, Button, Alert, Spinner } from 'react-bootstrap';\nimport { useNavigate, Link } from 'react-router-dom';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_BASE = 'http://localhost:8080';\nconst RegisterEvent = () => {\n  _s();\n  const [events, setEvents] = useState([]);\n  const [eventsLoading, setEventsLoading] = useState(true);\n  const [eventsError, setEventsError] = useState('');\n  const [paymentModes, setPaymentModes] = useState([]);\n  const [pmLoading, setPmLoading] = useState(true);\n  const [pmError, setPmError] = useState('');\n  const navigate = useNavigate();\n  const [eventId, setEventId] = useState('');\n  const [customerId, setCustomerId] = useState('');\n  //const [paymentMode, setPaymentMode] = useState('FREE');\n  const [paymentMode, setPaymentMode] = useState('');\n\n  //Added for transactionId\n  const [transactionId, setTransactionId] = useState('');\n  const [submitting, setSubmitting] = useState(false);\n  const [msg, setMsg] = useState('');\n  const [err, setErr] = useState('');\n\n  // Take logged-in customer ID from localStorage\n  const storedCustomerId = localStorage.getItem('customerId');\n\n  // Load events for dropdown\n  useEffect(() => {\n    let cancelled = false;\n    setEventsLoading(true);\n    setEventsError('');\n    axios.get(`${API_BASE}/api/events`).then(res => {\n      if (cancelled) return;\n      setEvents(res.data || []);\n    }).catch(e => {\n      console.error('Failed to load events:', e);\n      if (cancelled) return;\n      setEventsError('Could not load events. Please try again.');\n    }).finally(() => !cancelled && setEventsLoading(false));\n    return () => {\n      cancelled = true;\n    };\n  }, []);\n\n  //Added 08-08-2025 for loading payment modes option\n\n  // Load payment modes from API\n  useEffect(() => {\n    let cancelled = false;\n    setPmLoading(true);\n    setPmError('');\n    axios.get(`${API_BASE}/api/payments/payment-modes`).then(res => {\n      if (cancelled) return;\n      const modes = Array.isArray(res.data) ? res.data : [];\n      setPaymentModes(modes);\n      // set default if not chosen yet\n      if (!paymentMode && modes.length > 0) {\n        setPaymentMode(modes[0]);\n      }\n    }).catch(e => {\n      console.error('Failed to load payment modes:', e);\n      if (!cancelled) setPmError('Could not load payment modes.');\n    }).finally(() => !cancelled && setPmLoading(false));\n    return () => {\n      cancelled = true;\n    };\n  }, []);\n  //[paymentMode]);\n\n  const selectedEvent = useMemo(() => events.find(ev => String(ev.id) === String(eventId)) || null, [events, eventId]);\n  const isFreeEvent = ev => {\n    const p = ev === null || ev === void 0 ? void 0 : ev.price;\n    const n = p == null ? 0 : Number(p);\n    return !Number.isNaN(n) && n === 0;\n  };\n  const free = isFreeEvent(selectedEvent);\n  useEffect(() => {\n    if (!selectedEvent) {\n      setPaymentMode('');\n      return;\n    }\n    if (free) {\n      setPaymentMode('FREE'); // lock to FREE\n    } else if (paymentMode === 'FREE') {\n      const firstPaid = paymentModes.find(m => m !== 'FREE') || '';\n      setPaymentMode(firstPaid);\n    }\n  }, [eventId, selectedEvent, free, paymentModes]);\n\n  // useEffect to clear transactionId when not needed\n  useEffect(() => {\n    const needsTxnId = !free && ['GOOGLEPAY', 'CREDITCARD', 'DEBITCARD'].includes(paymentMode);\n    if (!needsTxnId) setTransactionId('');\n  }, [free, paymentMode]);\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setMsg('');\n    setErr('');\n    if (!eventId) {\n      setErr('Please select an event and enter your Customer ID.');\n      return;\n    }\n    if (!storedCustomerId) {\n      setErr('No customer is logged in. Please log in again.');\n      return;\n    }\n    if (!paymentMode) {\n      setErr('Please select a payment mode.');\n      return;\n    }\n    if (free && paymentMode !== 'FREE') {\n      setErr('Paid methods are not allowed for a free event.');\n      return;\n    }\n    if (!free && paymentMode === 'FREE') {\n      setErr('Free option is not allowed for a paid event.');\n      return;\n    }\n\n    //require transactionId for paid modes only but excluding cash\n    const needsTxnId = !free && paymentMode !== 'FREE' && paymentMode !== 'CASH';\n    if (needsTxnId && (!transactionId || transactionId.trim().length < 6)) {\n      setErr('Please enter a valid Transaction ID (min 6 characters).');\n      return;\n    }\n    setSubmitting(true);\n    try {\n      // await axios.post(`${API_BASE}/api/event-registrations`, {\n      await axios.post(`${API_BASE}/api/event-registrations/test`, {\n        eventId: Number(eventId),\n        customerId: Number(storedCustomerId),\n        //testing code\n        // amount: 0,   \n        paymentMode,\n        //Added for transactionId on 10-08-2025\n        transactionId: needsTxnId ? transactionId.trim() : null // NEW\n      });\n      setMsg('Registered successfully!');\n      setTimeout(() => {\n        navigate('/customer/dashboard');\n      }, 1500);\n      // Reset form (keep events list)\n      setEventId('');\n      setCustomerId('');\n      setPaymentMode(paymentModes[0] || '');\n      setTransactionId('');\n    } catch (e) {\n      var _e$response, _e$response$data;\n      console.error('Registration failed:', e);\n      setErr((e === null || e === void 0 ? void 0 : (_e$response = e.response) === null || _e$response === void 0 ? void 0 : (_e$response$data = _e$response.data) === null || _e$response$data === void 0 ? void 0 : _e$response$data.message) || 'Registration failed. Check the Event and Customer IDs and try again.');\n    } finally {\n      setSubmitting(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    className: \"mt-4\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"mb-4\",\n      children: \"Register for Event\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 7\n    }, this), msg && /*#__PURE__*/_jsxDEV(Alert, {\n      variant: \"success\",\n      children: msg\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 15\n    }, this), (err || eventsError) && /*#__PURE__*/_jsxDEV(Alert, {\n      variant: \"danger\",\n      children: err || eventsError\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 32\n    }, this), /*#__PURE__*/_jsxDEV(Form, {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n        className: \"mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Select Event\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 11\n        }, this), eventsLoading ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"d-flex align-items-center gap-2\",\n          children: [/*#__PURE__*/_jsxDEV(Spinner, {\n            animation: \"border\",\n            size: \"sm\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 206,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Loading events\\u2026\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 207,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(Form.Select, {\n          value: eventId,\n          onChange: e => setEventId(e.target.value),\n          required: true,\n          disabled: events.length === 0,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"-- Select an event --\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 216,\n            columnNumber: 15\n          }, this), events.map(ev => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: ev.id,\n            children: ev.title\n          }, ev.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 218,\n            columnNumber: 17\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        className: \"mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Payment Mode\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Select, {\n          value: paymentMode,\n          onChange: e => setPaymentMode(e.target.value)\n          //Added\n          ,\n          required: true,\n          disabled: paymentModes.length === 0,\n          children: [paymentModes.length === 0 && /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"-- No modes --\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 236,\n            columnNumber: 43\n          }, this), paymentModes.map(mode => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: mode,\n            children: formatLabel(mode)\n          }, mode, false, {\n            fileName: _jsxFileName,\n            lineNumber: 238,\n            columnNumber: 17\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 228,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 9\n      }, this), !free && paymentMode && paymentMode !== 'FREE' && paymentMode !== 'CASH' && /*#__PURE__*/_jsxDEV(Form.Group, {\n        className: \"mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Transaction ID\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 254,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"text\",\n          value: transactionId,\n          onChange: e => setTransactionId(e.target.value),\n          placeholder: paymentMode.includes('UPI') || paymentMode.includes('GPAY') ? 'Enter UTR / GPay transaction ID' : 'Enter Card Transaction ID / Auth Code',\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 255,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 253,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"success\",\n        type: \"submit\",\n        disabled: submitting || eventsLoading,\n        children: submitting ? 'Registering…' : 'Register'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 269,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      align: \"right\",\n      children: /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/customer/dashboard\",\n        className: \" bg-green-100 rounded hover:bg-green-200\",\n        align: \"right\",\n        children: \"Go to Customer Dashboard\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 274,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 273,\n      columnNumber: 8\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 195,\n    columnNumber: 5\n  }, this);\n};\n_s(RegisterEvent, \"GhDntEpNp69YydKNbp1VA3WtFeU=\", false, function () {\n  return [useNavigate];\n});\n_c = RegisterEvent;\nfunction formatLabel(code) {\n  return code.split('_').map(w => w.charAt(0) + w.slice(1).toLowerCase()).join(' ');\n}\nexport default RegisterEvent;\nvar _c;\n$RefreshReg$(_c, \"RegisterEvent\");","map":{"version":3,"names":["React","useEffect","useState","useMemo","Container","Form","Button","Alert","Spinner","useNavigate","Link","axios","jsxDEV","_jsxDEV","API_BASE","RegisterEvent","_s","events","setEvents","eventsLoading","setEventsLoading","eventsError","setEventsError","paymentModes","setPaymentModes","pmLoading","setPmLoading","pmError","setPmError","navigate","eventId","setEventId","customerId","setCustomerId","paymentMode","setPaymentMode","transactionId","setTransactionId","submitting","setSubmitting","msg","setMsg","err","setErr","storedCustomerId","localStorage","getItem","cancelled","get","then","res","data","catch","e","console","error","finally","modes","Array","isArray","length","selectedEvent","find","ev","String","id","isFreeEvent","p","price","n","Number","isNaN","free","firstPaid","m","needsTxnId","includes","handleSubmit","preventDefault","trim","post","setTimeout","_e$response","_e$response$data","response","message","className","children","fileName","_jsxFileName","lineNumber","columnNumber","variant","onSubmit","Group","Label","animation","size","Select","value","onChange","target","required","disabled","map","title","mode","formatLabel","Control","type","placeholder","align","to","_c","code","split","w","charAt","slice","toLowerCase","join","$RefreshReg$"],"sources":["C:/Users/kavar/Downloads/simpleCRUD_EventNexus/simpleCRUD_EventNexus/eventnexus-frontend/src/pages/customer/RegisterEvent.jsx"],"sourcesContent":["import React, { useEffect, useState, useMemo } from 'react';\r\nimport { Container, Form, Button, Alert, Spinner } from 'react-bootstrap';\r\nimport { useNavigate, Link } from 'react-router-dom';\r\nimport axios from 'axios';\r\n\r\nconst API_BASE = 'http://localhost:8080';\r\n\r\nconst RegisterEvent = () => {\r\n  const [events, setEvents] = useState([]);\r\n  const [eventsLoading, setEventsLoading] = useState(true);\r\n  const [eventsError, setEventsError] = useState('');\r\n\r\n  \r\n  const [paymentModes, setPaymentModes] = useState([]);      \r\n  const [pmLoading, setPmLoading] = useState(true);           \r\n  const [pmError, setPmError] = useState('');\r\n\r\n  const navigate = useNavigate(); \r\n\r\n\r\n  const [eventId, setEventId] = useState('');\r\n  const [customerId, setCustomerId] = useState('');\r\n  //const [paymentMode, setPaymentMode] = useState('FREE');\r\n  const [paymentMode, setPaymentMode] = useState('');\r\n\r\n  //Added for transactionId\r\n  const [transactionId, setTransactionId] = useState('');        \r\n\r\n  const [submitting, setSubmitting] = useState(false);\r\n  const [msg, setMsg] = useState('');\r\n  const [err, setErr] = useState('');\r\n\r\n   // Take logged-in customer ID from localStorage\r\n  const storedCustomerId = localStorage.getItem('customerId');\r\n\r\n\r\n  // Load events for dropdown\r\n  useEffect(() => {\r\n    let cancelled = false;\r\n    setEventsLoading(true);\r\n    setEventsError('');\r\n\r\n    axios\r\n      .get(`${API_BASE}/api/events`)\r\n      .then((res) => {\r\n        if (cancelled) return;\r\n        setEvents(res.data || []);\r\n      })\r\n      .catch((e) => {\r\n        console.error('Failed to load events:', e);\r\n        if (cancelled) return;\r\n        setEventsError('Could not load events. Please try again.');\r\n      })\r\n      .finally(() => !cancelled && setEventsLoading(false));\r\n\r\n    return () => { cancelled = true; };\r\n  }, []);\r\n\r\n   //Added 08-08-2025 for loading payment modes option\r\n\r\n  // Load payment modes from API\r\n  useEffect(() => {\r\n    let cancelled = false;\r\n    setPmLoading(true);\r\n    setPmError('');\r\n\r\n    axios.get(`${API_BASE}/api/payments/payment-modes`)\r\n      .then(res => {\r\n        if (cancelled) return;\r\n\r\n        const modes = Array.isArray(res.data) ? res.data : [];\r\n        setPaymentModes(modes);\r\n        // set default if not chosen yet\r\n        if (!paymentMode && modes.length > 0) {\r\n          setPaymentMode(modes[0]);\r\n        }\r\n      })\r\n      .catch(e => {\r\n        console.error('Failed to load payment modes:', e);\r\n        if (!cancelled) setPmError('Could not load payment modes.');\r\n      })\r\n      .finally(() => !cancelled && setPmLoading(false));\r\n\r\n    return () => { cancelled = true; };\r\n  }, []);\r\n  //[paymentMode]);\r\n\r\n\r\nconst selectedEvent = useMemo(\r\n    () => events.find(ev => String(ev.id) === String(eventId)) || null,\r\n    [events, eventId]\r\n  );\r\n  const isFreeEvent = (ev) => {\r\n    const p = ev?.price;\r\n    const n = p == null ? 0 : Number(p);\r\n    return !Number.isNaN(n) && n === 0;\r\n  };\r\n  const free = isFreeEvent(selectedEvent);\r\n\r\n  useEffect(() => {\r\n    if (!selectedEvent) {\r\n      setPaymentMode('');\r\n      return;\r\n    }\r\n    if (free) {\r\n      setPaymentMode('FREE'); // lock to FREE\r\n    } else if (paymentMode === 'FREE') {\r\n\r\n      const firstPaid = paymentModes.find(m => m !== 'FREE') || '';\r\n      setPaymentMode(firstPaid);\r\n    }\r\n  }, [eventId, selectedEvent, free, paymentModes]); \r\n\r\n\r\n  // useEffect to clear transactionId when not needed\r\nuseEffect(() => {\r\n  const needsTxnId = !free && ['GOOGLEPAY', 'CREDITCARD', 'DEBITCARD'].includes(paymentMode);\r\n  if (!needsTxnId) setTransactionId('');\r\n}, [free, paymentMode]);\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    setMsg('');\r\n    setErr('');\r\n\r\n    if (!eventId) {\r\n      setErr('Please select an event and enter your Customer ID.');\r\n      return;\r\n    }\r\n\r\n     if (!storedCustomerId) {\r\n      setErr('No customer is logged in. Please log in again.');\r\n      return;\r\n    }\r\n\r\n    if (!paymentMode) {\r\n      setErr('Please select a payment mode.');\r\n      return;\r\n    }\r\n\r\n     if (free && paymentMode !== 'FREE') {\r\n      setErr('Paid methods are not allowed for a free event.');\r\n      return;\r\n    }\r\n    if (!free && paymentMode === 'FREE') {\r\n      setErr('Free option is not allowed for a paid event.');\r\n      return;\r\n    }\r\n\r\n    //require transactionId for paid modes only but excluding cash\r\n    const needsTxnId = !free && (paymentMode !== 'FREE' && paymentMode !== 'CASH');\r\n    if (needsTxnId && (!transactionId || transactionId.trim().length < 6)) {\r\n      setErr('Please enter a valid Transaction ID (min 6 characters).');\r\n      return;\r\n    }\r\n\r\n    setSubmitting(true);\r\n    try {\r\n      // await axios.post(`${API_BASE}/api/event-registrations`, {\r\n      await axios.post(`${API_BASE}/api/event-registrations/test`, {\r\n\r\n        eventId: Number(eventId),\r\n        customerId: Number(storedCustomerId),\r\n        //testing code\r\n       // amount: 0,   \r\n        paymentMode,\r\n        //Added for transactionId on 10-08-2025\r\n        transactionId: needsTxnId ? transactionId.trim() : null   // NEW\r\n\r\n      });\r\n\r\n      setMsg('Registered successfully!');\r\n      setTimeout(() => {\r\n        navigate('/customer/dashboard');  \r\n      }, 1500);\r\n      // Reset form (keep events list)\r\n      setEventId('');\r\n      setCustomerId('');\r\n      setPaymentMode(paymentModes[0] || '');\r\n      setTransactionId('');                                      \r\n\r\n    } catch (e) {\r\n      console.error('Registration failed:', e);\r\n\r\n      setErr(\r\n        e?.response?.data?.message\r\n          || 'Registration failed. Check the Event and Customer IDs and try again.'\r\n      );\r\n    } finally {\r\n      setSubmitting(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Container className=\"mt-4\">\r\n      <h2 className=\"mb-4\">Register for Event</h2>\r\n\r\n      {msg && <Alert variant=\"success\">{msg}</Alert>}\r\n      {(err || eventsError) && <Alert variant=\"danger\">{err || eventsError}</Alert>}\r\n\r\n      <Form onSubmit={handleSubmit}>\r\n        <Form.Group className=\"mb-3\">\r\n          <Form.Label>Select Event</Form.Label>\r\n          {eventsLoading ? (\r\n            <div className=\"d-flex align-items-center gap-2\">\r\n              <Spinner animation=\"border\" size=\"sm\" />\r\n              <span>Loading events…</span>\r\n            </div>\r\n          ) : (\r\n            <Form.Select\r\n              value={eventId}\r\n              onChange={(e) => setEventId(e.target.value)}\r\n              required\r\n              disabled={events.length === 0}\r\n            >\r\n              <option value=\"\">-- Select an event --</option>\r\n              {events.map((ev) => (\r\n                <option key={ev.id} value={ev.id}>\r\n                  {ev.title}\r\n                </option>\r\n              ))}\r\n            </Form.Select>\r\n          )}\r\n        </Form.Group>\r\n\r\n        <Form.Group className=\"mb-3\">\r\n          <Form.Label>Payment Mode</Form.Label>\r\n          <Form.Select\r\n            value={paymentMode}\r\n            onChange={(e) => setPaymentMode(e.target.value)}\r\n            //Added\r\n             required\r\n             disabled={paymentModes.length === 0}\r\n          >\r\n            {/* added for payment mode */}\r\n            {paymentModes.length === 0 && <option value=\"\">-- No modes --</option>}\r\n             {paymentModes.map((mode) => (\r\n                <option key={mode} value={mode}>\r\n                  {formatLabel(mode)}\r\n                </option>\r\n              ))}\r\n\r\n            {/* <option value=\"FREE\">FREE</option>\r\n            <option value=\"CREDIT_CARD\">Credit Card</option>\r\n            <option value=\"UPI\">UPI</option> */}\r\n          </Form.Select>\r\n        </Form.Group>\r\n\r\n         {/* NEW: Transaction ID field only for paid modes */}\r\n        {/* {!free && paymentMode && paymentMode !== 'FREE' && ( */}\r\n\r\n          {!free && paymentMode && paymentMode !== 'FREE' && paymentMode !== 'CASH' && (\r\n          <Form.Group className=\"mb-3\">\r\n            <Form.Label>Transaction ID</Form.Label>\r\n            <Form.Control\r\n              type=\"text\"\r\n              value={transactionId}\r\n              onChange={(e) => setTransactionId(e.target.value)}\r\n              placeholder={\r\n                paymentMode.includes('UPI') || paymentMode.includes('GPAY')\r\n                  ? 'Enter UTR / GPay transaction ID'\r\n                  : 'Enter Card Transaction ID / Auth Code'\r\n              }\r\n              required\r\n            />\r\n          </Form.Group>\r\n        )}\r\n\r\n        <Button variant=\"success\" type=\"submit\" disabled={submitting || eventsLoading}>\r\n          {submitting ? 'Registering…' : 'Register'}\r\n        </Button>\r\n      </Form>\r\n       <div align=\"right\">\r\n                <Link to=\"/customer/dashboard\" className=\" bg-green-100 rounded hover:bg-green-200\" align=\"right\">\r\n                      Go to Customer Dashboard\r\n                    </Link>\r\n            </div>\r\n    </Container>\r\n  );\r\n};\r\n\r\n\r\nfunction formatLabel(code) {\r\n  return code\r\n    .split('_')\r\n    .map(w => w.charAt(0) + w.slice(1).toLowerCase())\r\n    .join(' ');\r\n}\r\n\r\nexport default RegisterEvent;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}